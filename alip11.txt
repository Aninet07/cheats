// Define the Operation interface
interface Operation {
    double PI = 3.142; // Constant

    double volume(); // Abstract method
}

// Implement the Operation interface in the Cylinder class
class Cylinder implements Operation {
    private double radius;
    private double height;

    // Constructor
    public Cylinder(double radius, double height) {
        this.radius = radius;
        this.height = height;
    }

    // Implement the volume method from the Operation interface
    @Override
    public double volume() {
        return PI * Math.pow(radius, 2) * height;
    }
}

public class CylinderExample {
    public static void main(String[] args) {
        // Create a Cylinder object
        Cylinder myCylinder = new Cylinder(3.0, 5.0);

        // Calculate and display the volume
        double volume = myCylinder.volume();
        System.out.println("The volume of the cylinder is: " + volume);
    }
}
-----------------------------------------------------------------------------------------
import java.util.Scanner;

public class UsernamePasswordValidation {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter Username: ");
        String username = scanner.nextLine();

        System.out.print("Enter Password: ");
        String password = scanner.nextLine();

        try {
            validateUsernamePassword(username, password);
            System.out.println("Username and Password are valid.");
        } catch (InvalidPasswordException e) {
            System.out.println("Invalid Password: " + e.getMessage());
        }
    }

    private static void validateUsernamePassword(String username, String password) throws InvalidPasswordException {
        if (!username.equals(password)) {
            throw new InvalidPasswordException("Username and Password should be the same.");
        }
    }
}

class InvalidPasswordException extends Exception {
    public InvalidPasswordException(String message) {
        super(message);
    }
}
