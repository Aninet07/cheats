import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class FileCopyExample {
    public static void main(String[] args) {
        if (args.length < 2) {
            System.out.println("Usage: java FileCopyExample <sourceFileName> <destinationFileName>");
            return;
        }

        String sourceFileName = args[0];
        String destinationFileName = args[1];

        try (BufferedReader reader = new BufferedReader(new FileReader(sourceFileName));
             BufferedWriter writer = new BufferedWriter(new FileWriter(destinationFileName))) {

            String line;

            // Read from the source file and write to the destination file
            while ((line = reader.readLine()) != null) {
                writer.write(line);
                writer.newLine(); // Add a newline after each line
            }

            System.out.println("Contents copied from " + sourceFileName + " to " + destinationFileName + " successfully.");

        } catch (IOException e) {
            System.out.println("Error copying contents: " + e.getMessage());
        }
    }
}
----------------------------------------------------------------------------------------------------------
class Account {
    String custname;
    int accno;

    // Default constructor
    public Account() {
        custname = "Unknown";
        accno = 0;
    }

    // Parameterized constructor
    public Account(String custname, int accno) {
        this.custname = custname;
        this.accno = accno;
    }

    public void displayDetails() {
        System.out.println("Customer Name: " + custname);
        System.out.println("Account Number: " + accno);
    }
}

class SavingAccount extends Account {
    double savingbal;
    double minbal;

    // Default constructor
    public SavingAccount() {
        super(); // Call the default constructor of the superclass
        savingbal = 0.0;
        minbal = 0.0;
    }

    // Parameterized constructor
    public SavingAccount(String custname, int accno, double savingbal, double minbal) {
        super(custname, accno); // Call the parameterized constructor of the superclass
        this.savingbal = savingbal;
        this.minbal = minbal;
    }
}

class AccountDetail extends SavingAccount {
    double depositamt;
    double withdrawalamt;

    // Default constructor
    public AccountDetail() {
        super(); // Call the default constructor of the superclass
        depositamt = 0.0;
        withdrawalamt = 0.0;
    }

    // Parameterized constructor
    public AccountDetail(String custname, int accno, double savingbal, double minbal,
                         double depositamt, double withdrawalamt) {
        super(custname, accno, savingbal, minbal); // Call the parameterized constructor of the superclass
        this.depositamt = depositamt;
        this.withdrawalamt = withdrawalamt;
    }

    // Method to display customer details
    public void displayCustomerDetails() {
        // Call the displayDetails method of the superclass to display basic details
        super.displayDetails();
        System.out.println("Saving Balance: " + savingbal);
        System.out.println("Minimum Balance: " + minbal);
        System.out.println("Deposit Amount: " + depositamt);
        System.out.println("Withdrawal Amount: " + withdrawalamt);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create an object of AccountDetail class
        AccountDetail accountDetail = new AccountDetail("John Doe", 123456, 5000.0, 1000.0, 2000.0, 1500.0);

        // Display customer details
        accountDetail.displayCustomerDetails();
    }
}
